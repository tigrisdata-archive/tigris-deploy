# Copyright 2022 Tigris Data, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tigris-server
  labels:
    app.kubernetes.io/name: tigris-server
    app.kubernetes.io/part-of: tigris
    app.kubernetes.io/component: server
  annotations:
    {{- if .Values.ingress_nginx.enabled }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    {{- end }}
    {{- if .Values.ingress_aws.enabled }}
    alb.ingress.kubernetes.io/load-balancer-name: {{ .Values.lb_name }}
    alb.ingress.kubernetes.io/group.name: {{ .Values.lb_name }}
    {{- if .Values.tls_hostname }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.tls_hostname }}
    {{- end }}
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/conditions.tigris-grpc: |
      [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
    alb.ingress.kubernetes.io/healthcheck-path: /v1/health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01 # disable support for TLS 1.0, 1.1 and weak ciphers
    alb.ingress.kubernetes.io/tags: service=tigris-server
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.app_cookie.duration_seconds=10,stickiness.type=app_cookie,stickiness.app_cookie.cookie_name=Tigris-Tx-Id
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/ingress-hostname-source: annotation-only
    {{- end }}
spec:
  {{- if .Values.ingress_nginx.enabled }}
  ingressClassName: nginx
  {{- end }}
  rules:
    - http:
        paths:
          - path: "/v1"
            pathType: Prefix
            backend:
              service:
                name: tigris-http
                port:
                  number: {{ .Values.service_port | default 80 }}
          - path: "/tigrisdata.v1.Tigris/"
            pathType: Prefix
            backend:
              service:
                name: tigris-grpc
                port:
                  number: {{ .Values.service_port | default 80 }}
          - path: "/tigrisdata.admin.v1.Admin/"
            pathType: Prefix
            backend:
              service:
                name: tigris-grpc
                port:
                  number: {{ .Values.service_port | default 80 }}
          - path: "/tigrisdata.auth.v1.Auth/"
            pathType: Prefix
            backend:
              service:
                name: tigris-grpc
                port:
                  number: {{ .Values.service_port | default 80 }}
          - path: "/tigrisdata.observability.v1.Observability/"
            pathType: Prefix
            backend:
              service:
                name: tigris-grpc
                port:
                  number: {{ .Values.service_port | default 80 }}
          - path: "/tigrisdata.management.v1.Management/"
            pathType: Prefix
            backend:
              service:
                name: tigris-grpc
                port:
                  number: {{ .Values.service_port | default 80 }}
          - path: "/HealthAPI/"
            pathType: Prefix
            backend:
              service:
                name: tigris-grpc
                port:
                  number: {{ .Values.service_port | default 80 }}
  {{- if and .Values.ingress_aws.enabled (ne .Values.tls_hostname "") }}
  tls:
    - hosts:
        - {{ .Values.tls_hostname }}
  {{- end }}
